# model_mapping = {
#     "DecisionTrees": "dt",
#     "RandomForest": "rf",
#     "XGBoost": "xgboost",
#     "LightGBM": "lightgbm",
#     "CatBoost": "catboost",
#     "LogisticRegression": "lr",
#     "NaiveBayes": "nb",
#     "K-NearestNeighbors": "knn",
#     "SupportVectorMachine": "svm",
#     "RidgeClassifier": "ridge",
#     "QuadraticDiscriminantAnalysis": "qda",
#     "AdaBoost": "ada",
#     "ExtraTreesClassifier": "et",
#     "GradientBoostingClassifier": "gbc",
#     "LinearDiscriminantAnalysis": "lda",
#     "NeuralNetwork": "mlp",
#     "ExtremelyRandomizedTrees": "et",
#     "CalibratedClassifier": "cc",
#     "VotingClassifier": "vc",
#     "StackingClassifier": "stacking",
# }

model_mapping = {
    'LGBMRegressor':'lightgbm', 
    'ExtraTreesRegressor':'et',
    'RandomForestRegressor':'rt',
    'GradientBoostingRegressor':'gbr',
    'LinearRegression':'lr',
    'Ridge':'ridge',
    'Lasso':'lasso',
    'ElasticNet':'en',
    'LassoLars':'llar',
    'BayesianRidge':'br',
    'KNeighborsRegressor':'knn',
    'HuberRegressor':'huber',
    'Lars':'lar',
    'AdaBoostRegressor':'ada',
    'DecisionTreeRegressor':'dt',
    'PassiveAggressiveRegressor':'par',
    'OrthogonalMatchingPursuit':'omp',
    'DummyRegressor':'dummy',
    'CatBoostRegressor': 'catboost'
}